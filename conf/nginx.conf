
user www; 
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # 配置缓存段
#    proxy_cache_path /tmp/nginxcache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
   
    limit_conn_zone $binary_remote_addr zone=conn_zone:1m;
    limit_req_zone $binary_remote_addr zone=req_zone:1m rate:1r/s;


    # 配置nginx访问日志格式
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" "$request_body"';

#    log_format main   '{'
#		      '"@timestamp":"$time_iso8601",'
#                      '"connection":"$connection",'
#                      '"connection_requests":"$connection_requests",'
#                      '"request":"$request",'
#                      '"request_length":"$request_length",'
#                      '"request_uri":"$request_uri",'
#                      '"request_method":"$request_method",'
#                      '"server_name":"$server_name",'
#                      '"status":"$status",'
#                      '"remote_user":"$remote_user",'
#		                  '"remote_addr":"$remote_addr",'
#                      '"time_local":"$time_local",'
#                      '"body_bytes_sent":"$body_bytes_sent",'
#                      '"bytes_sent":"$bytes_sent",'
#                      '"msec":"$msec",'
#                      '"upstream_status":"$upstream_status",'
#                      '"upstream_addr":"$upstream_addr",'
#                      '"upstream_response_time":"$upstream_response_time",'
#                      '"http_sessionKey":"$http_sessionKey",'
#                      '"cookie_sk":"$cookie_sk",'
#                      '"http_referer":"$http_referer",'
#                      '"http_user_agent":"$http_user_agent",'
#                      '"http_x_forwarded_for":"$http_x_forwarded_for"'
#                      '}';
#    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on; 
    gzip_min_length  1000; 
    gzip_comp_level 6;
    gzip_proxied     expired no-cache no-store private auth; 
    gzip_types text/plain application/json application/x-javascript application/css application/xml application/xml+rss text/javascript application/x-httpd-php image/jpeg image/gif image/png image/x-ms-bmp;
    server {
        listen       80;
        server_name  local.devopsman.cn;
        location / {
            root   html;
            auth_basic           "Administrator’s Area";
            auth_basic_user_file /root/.htp;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80a
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
         listen      80;
         server_name web.devopsman.cn;
       access_log  logs/web.devopsman.cn.access.log  main;
         location / {
            alias ops/;
         }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include vhost/*.conf;
    include thost/*.conf;
}
